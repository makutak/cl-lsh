#!/bin/sh
#|-*- mode:lisp -*-|#
#| <Put a one-line description here>
exec ros -Q -- $0 "$@"
|#
(progn ;;init forms
  (ros:ensure-asdf)
  ;;#+quicklisp (ql:quickload '() :silent t)
  )

(defpackage :ros.script.main.3707967474
  (:use :cl))
(in-package :ros.script.main.3707967474)

(ql:quickload '(:uiop :split-sequence) :silent t)

(import 'split-sequence:split-sequence)

(defvar *builtin-commands* '("cd" "pwd"  "help" "exit"))

(defun lsh-help ()
  (format t "Stephen Brennan's LSH~%")
  (format t "Type program names and arguments, and hit enter.~%")
  (format t "The following are built in:~%")
  (dolist (command *builtin-commands*)
    (format t "~3t~a~%" command))
  (format t "Use the man command for information on other programs.~%"))

(defun lsh-pwd ()
  (format t "~a~%" (sb-posix:getcwd)))

(defun remove-blank (args)
  (remove-if #'(lambda (arg) (= (length arg) 0)) args))

(defun lsh-cd (args)
  (let ((dest
         (if (null (remove-blank args))
             (directory-namestring (user-homedir-pathname))
             (first (remove-blank args)))))
    (ignore-errors (sb-posix:chdir dest))))

(defun lsh-read ()
  (split-sequence #\Space (read-line *query-io* nil)))

(defun lsh-parse (args)
  (cond ((equal (first args) "help") (lsh-help))
        ((equal (first args) "pwd") (lsh-pwd))
        ((equal (first args) "cd") (lsh-cd (cdr args)))
        (t (format t "~a~%" (first args)))))

(defun lsh-loop ()
  (loop
     (format *query-io* "> ")
     (finish-output *query-io*)
     (let ((input (lsh-read)))
       (when (or
              (equal (first input) "exit")
              (null (first input)))
         (return))
       (lsh-parse input))))

(defun main (&rest argv)
  (declare (ignore argv))
  (lsh-loop))
;;; vim: set ft=lisp lisp:
